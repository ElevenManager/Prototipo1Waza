{"ast":null,"code":"var _jsxFileName = \"/home/eleven/PhpstormProjects/untitled1/frontend/src/components/Pacientes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTable } from 'react-table';\nimport 'react-table/react-table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pacientes = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Obtén el token del localStorage\n      const response = await axios.get('http://localhost:3002/api/persona/listar', {\n        headers: {\n          'Authorization': `Bearer ${token}` // Incluye el token en los encabezados\n        }\n      });\n      setData(response.data.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const columns = React.useMemo(() => [{\n    Header: 'Opciones',\n    accessor: 'idpersona',\n    // Accessor is the \"key\" in the data\n    Cell: ({\n      value\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: () => mostrar(value),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-pencil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), \" Editar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info\",\n        onClick: () => historia(value),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), \" Historia\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)\n  }, {\n    Header: 'Apellido Paterno',\n    accessor: 'apaterno'\n  }, {\n    Header: 'Apellido Materno',\n    accessor: 'amaterno'\n  }, {\n    Header: 'Nombre',\n    accessor: 'nombre'\n  }, {\n    Header: 'Fecha de Nacimiento',\n    accessor: 'fecha_nacimiento'\n  }, {\n    Header: 'Sexo',\n    accessor: 'sexo'\n  }, {\n    Header: 'Estado Civil',\n    accessor: 'estado_civil'\n  }, {\n    Header: 'Número de Documento',\n    accessor: 'num_documento'\n  }, {\n    Header: 'Dirección',\n    accessor: 'direccion'\n  }, {\n    Header: 'Teléfono',\n    accessor: 'telefono'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listado de Pacientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"react-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Pacientes, \"KdESjDNCe2abo8iwyHNuTWfPjUU=\", false, function () {\n  return [useTable];\n});\n_c = Pacientes;\nexport default Pacientes;\nvar _c;\n$RefreshReg$(_c, \"Pacientes\");","map":{"version":3,"names":["React","useEffect","useState","axios","useTable","jsxDEV","_jsxDEV","Pacientes","_s","data","setData","loading","setLoading","fetchData","token","localStorage","getItem","response","get","headers","error","console","columns","useMemo","Header","accessor","Cell","value","children","className","onClick","mostrar","fileName","_jsxFileName","lineNumber","columnNumber","historia","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/eleven/PhpstormProjects/untitled1/frontend/src/components/Pacientes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTable } from 'react-table';\nimport 'react-table/react-table.css';\n\nconst Pacientes = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            const token = localStorage.getItem('token'); // Obtén el token del localStorage\n            const response = await axios.get('http://localhost:3002/api/persona/listar', {\n                headers: {\n                    'Authorization': `Bearer ${token}` // Incluye el token en los encabezados\n                }\n            });\n            setData(response.data.data);\n            setLoading(false);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Opciones',\n                accessor: 'idpersona', // Accessor is the \"key\" in the data\n                Cell: ({ value }) => (\n                    <div>\n                        <button className=\"btn btn-warning\" onClick={() => mostrar(value)}>\n                            <i className=\"fa fa-pencil\"></i> Editar\n                        </button>\n                        <button className=\"btn btn-info\" onClick={() => historia(value)}>\n                            <i className=\"fa fa-file\"></i> Historia\n                        </button>\n                    </div>\n                ),\n            },\n            {\n                Header: 'Apellido Paterno',\n                accessor: 'apaterno',\n            },\n            {\n                Header: 'Apellido Materno',\n                accessor: 'amaterno',\n            },\n            {\n                Header: 'Nombre',\n                accessor: 'nombre',\n            },\n            {\n                Header: 'Fecha de Nacimiento',\n                accessor: 'fecha_nacimiento',\n            },\n            {\n                Header: 'Sexo',\n                accessor: 'sexo',\n            },\n            {\n                Header: 'Estado Civil',\n                accessor: 'estado_civil',\n            },\n            {\n                Header: 'Número de Documento',\n                accessor: 'num_documento',\n            },\n            {\n                Header: 'Dirección',\n                accessor: 'direccion',\n            },\n            {\n                Header: 'Teléfono',\n                accessor: 'telefono',\n            },\n        ],\n        []\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data });\n\n    return (\n        <div>\n            <h1>Listado de Pacientes</h1>\n            {loading ? (\n                <p>Cargando...</p>\n            ) : (\n                <table {...getTableProps()} className=\"react-table\">\n                    <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                        </tr>\n                    ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n};\n\nexport default Pacientes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}